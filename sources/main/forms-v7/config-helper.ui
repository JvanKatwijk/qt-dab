<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>configWidget</class>
 <widget class="QWidget" name="configWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>507</width>
    <height>445</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Configuration and control</string>
  </property>
  <property name="toolTip">
   <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Configuration and control widget.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_3">
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_6">
     <item>
      <widget class="QCheckBox" name="tiiSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Qt-DAB supports two different implementations for detecting TII values.&lt;/p&gt;&lt;p&gt;The &amp;quot;new&amp;quot; one (selected if checked) is very sensitive and if your antenna is too good might give too many false TII's&lt;/p&gt;&lt;p&gt;The old one is less senstive, but then, gives less false positives&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;The new algorithm shows also phase data, with which an estimate is (can be) made what the delay of the signal is, and it supports looking for collisions with given subIds.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;The old one is less fancy, shows only 0 for phase and does not support collisions.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>new tii detector</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QRadioButton" name="orderServiceIds">
       <property name="text">
        <string>serviceIds</string>
       </property>
       <attribute name="buttonGroup">
        <string notr="true">buttonGroup</string>
       </attribute>
      </widget>
     </item>
     <item>
      <widget class="QRadioButton" name="orderAlfabetical">
       <property name="text">
        <string>alphabetically</string>
       </property>
       <attribute name="buttonGroup">
        <string notr="true">buttonGroup</string>
       </attribute>
      </widget>
     </item>
     <item>
      <widget class="QRadioButton" name="ordersubChannelIds">
       <property name="text">
        <string>subchannelIds</string>
       </property>
       <attribute name="buttonGroup">
        <string notr="true">buttonGroup</string>
       </attribute>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_7">
     <item>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_4">
         <item>
          <widget class="QSpinBox" name="tiiThreshold_setter">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;TII threshold. The TII threshold is used in the detection of TII values in the NULL periods of the DAB frames. Of course, the lower the value, the more chance there is to get false positives.&lt;/p&gt;&lt;p&gt;Selecting the &amp;quot;new&amp;quot; tii detector leads to setting the minimum  threshold to 6 dB, for the other the minimum threshold is 4 dB. Setting the threshold to the minumum value leads in both cases - even with a small antenna - to some false positives.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="suffix">
            <string> dB</string>
           </property>
           <property name="minimum">
            <number>4</number>
           </property>
           <property name="value">
            <number>6</number>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QCheckBox" name="tiiFilter">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;It shows that setting a lower threshold value allows (too) many false tii messages. A filter can be selected that inspects the potential tii values and blocks some of thoese that seem false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>tii filter</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QCheckBox" name="allTIISelector">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If/when the threshold value for the TII detection is too low, the TII detector will &amp;quot;detect&amp;quot; non-existent transmitters. While some users want to see anythings that is detected, others (including myself) only want the &amp;quot;real&amp;quot; transmitters to appear on the DX display.&lt;/p&gt;&lt;p&gt;While by default the setting is &amp;quot;on&amp;quot;, switchin the selector 's value to &amp;quot;off&amp;quot; tells the software to show only transmitters known by the database.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>all tii</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_2">
         <item>
          <widget class="QSpinBox" name="fontSizeSelector">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The font size of the service lists (both the ensemble view and the favorites view) can be set.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="minimum">
            <number>8</number>
           </property>
           <property name="maximum">
            <number>15</number>
           </property>
           <property name="value">
            <number>10</number>
           </property>
          </widget>
         </item>
         <item>
          <widget class="smallPushButton" name="fontButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The font for displaying the servicenames in the ensemble display can be set here.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>font</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="smallPushButton" name="fontColorButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The color used to display the servicenames in the ensemblewidget can be selected here.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>font color</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_5">
         <item>
          <widget class="smallPushButton" name="pathButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The files containing slides - if being saved - will be saved in a folder/directory Qt-DAB-files in the home folder/directory. The tii files as well as the log file (both of caourse when enabled) are also stored in that folder/directory. The path can be altered by entering an EXISTING folder/directory in the menu that appears when the button is touched. That path will be effective the next program invocation.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>path</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="smallPushButton" name="audioSelectButton">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Choose between portaudio or Qt-audio as audio handler (will be effective next program invocation). Note that if no audio channels for the Qt_audio driver can be found, the default setting of portaudio is applied.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>audio</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
      </layout>
     </item>
     <item>
      <layout class="QVBoxLayout" name="verticalLayout_2">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout">
         <item>
          <widget class="clickablelabel" name="activeServices">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Number of active (sub)services. Each (sub)service runs in ots own thread.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>0</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="label_3">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The CPU load is an indication of the load when executing the program. The load tells the total load on the CPU, i.e. inclusing the load of other programs that might be running.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>CPU load</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLCDNumber" name="loadDisplay">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The number tells the overall CPU load (so, not only the load caused by running Qt-DAB)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="frameShape">
            <enum>QFrame::Shape::NoFrame</enum>
           </property>
           <property name="segmentStyle">
            <enum>QLCDNumber::SegmentStyle::Flat</enum>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QFormLayout" name="formLayout">
         <item row="0" column="0">
          <widget class="QLabel" name="label">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The mute time is the time, the audio will be suppressed when activating the mute function.&lt;/p&gt;&lt;p&gt;It is expressed in minutes.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>mute time (in min)</string>
           </property>
          </widget>
         </item>
         <item row="0" column="1">
          <widget class="smallSpinBox" name="muteTimeSetting">
           <property name="toolTip">
            <string>Set here the mute time in minutes</string>
           </property>
           <property name="minimum">
            <number>1</number>
           </property>
          </widget>
         </item>
         <item row="1" column="1">
          <widget class="smallSpinBox" name="switchDelaySetting">
           <property name="toolTip">
            <string>Set here the delay, when searching for data in a channel, in seconds</string>
           </property>
           <property name="minimum">
            <number>2</number>
           </property>
           <property name="maximum">
            <number>99999</number>
           </property>
          </widget>
         </item>
         <item row="1" column="0">
          <widget class="QLabel" name="label_2">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The switch time - expressed in seconds - is the time the processor will wait to see if there is&lt;/p&gt;&lt;p&gt;any data in a channel. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>switch time (in sec)</string>
           </property>
          </widget>
         </item>
         <item row="2" column="0">
          <widget class="QLabel" name="label_4">
           <property name="text">
            <string>stay time (in min)</string>
           </property>
          </widget>
         </item>
         <item row="2" column="1">
          <widget class="smallSpinBox" name="switchStaySetting">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Once - with scanning in single mode - a DAB stream is detected in a channel, the channel will stay &amp;quot;on&amp;quot; for the amount of minutes specified here.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="minimum">
            <number>1</number>
           </property>
           <property name="maximum">
            <number>99999</number>
           </property>
          </widget>
         </item>
        </layout>
       </item>
      </layout>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout">
     <item row="0" column="0">
      <widget class="smallPushButton" name="devicewidgetButton">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <family>Cantarell</family>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;show or hide the widget for controlling the device.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>device</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="smallPushButton" name="portSelector">
       <property name="font">
        <font>
         <pointsize>12</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;touching this button allws you to select a port for communication with a webbrowser when showing a map.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>port</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="smallPushButton" name="dlTextButton">
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Save the lines of text that appear as dynamic label&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>dlText</string>
       </property>
      </widget>
     </item>
     <item row="0" column="3" colspan="2">
      <widget class="smallPushButton" name="resetButton">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Push this button to reset, i.e. restart synchronization.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>reset</string>
       </property>
      </widget>
     </item>
     <item row="0" column="5">
      <widget class="smallPushButton" name="scheduleButton">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Touching this button allows specifying an element for the scheduler&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>schedule</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="smallPushButton" name="snrButton">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <family>Cantarell</family>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The snrViewer button controls a widget that - when enabled - will show the development of SNR over time. Parameters of the screen, height (the Y-axis) and the number of measurements (X-axis) can be set in the configuration widget.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>snr viewer</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="smallPushButton" name="set_coordinatesButton">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <family>Cantarell</family>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Touching this button shows a small menu where you can fill in the coordinates (in decimal notation) of your location.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>coordinates</string>
       </property>
      </widget>
     </item>
     <item row="1" column="2" colspan="2">
      <widget class="smallPushButton" name="loadTableButton">
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Touching this button will instruct the software to load a fresh database. Note that this only works if either the software is precompiled or you have installed the small library as discussed in the installation instructions.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>load table</string>
       </property>
      </widget>
     </item>
     <item row="1" column="4">
      <widget class="smallPushButton" name="dumpButton">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Push this button to save the raw input. Pushing will cause a menu to appear where a filename can be selected. Please note the big filesizes!&lt;/p&gt;&lt;p&gt;Push again to stop recording. You can reload it by using the file input (*.sdr) option. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Raw dump</string>
       </property>
      </widget>
     </item>
     <item row="1" column="5">
      <widget class="smallPushButton" name="skinButton">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select one of a few &amp;quot;skin&amp;quot;s for the widgets in the program. Will be effective the next program invocation.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>skin</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout_2">
     <item row="0" column="0">
      <widget class="QCheckBox" name="upload_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&amp;quot;upload enable&amp;quot; is a selector for - if configured - allowing some data to be uploaded to fmlist.org. When touching the ensemblename on top of the left part of the main widget, the current content of the ensemble is shown (in &amp;quot;.csv&amp;quot; format). If this selector is enabled - and if the feature is configured - you will be asked to accept (or deny) sending up the contents of the ensemble to &amp;quot;fmlist.org&amp;quot; (the site that is responsible for the database mapping the TII numbers to station names and station attributes.&lt;/p&gt;&lt;p&gt;The same for the result of the single scan.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>upload enable</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QCheckBox" name="utc_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you want to see UTC in the logs select this one.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string> utc Selector</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="QCheckBox" name="auto_http">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If enabled, the software will (try to) start the http handler on program start up&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>auto http</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QCheckBox" name="closeDirect_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are bored with the explicit request to stop, touch this one, and stopping is direct&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>close without asking</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QCheckBox" name="epg_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When set, the software is instructed to start an EPG processor when an EPG service is detected on starting an ensemble.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>epg automatic</string>
       </property>
      </widget>
     </item>
     <item row="1" column="2">
      <widget class="QCheckBox" name="onTop">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration whether or not the main widget should ALWAYS be op top. Note that setting will be applied the next time the program will start.&lt;/p&gt;&lt;p&gt;Note further that in Windows a problem may occur: a warning message might be invisible, hidden by the main widget op top.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>main widget on top</string>
       </property>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QCheckBox" name="correlationSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Synchronization of the receiver software with the incoming samplestream is dome using a correlation algorithm. As the scope on the displaywidget often shows is that there is more than a single peak in the correlation. Normally, the strongest peak is used, however, sometimes the difference in stength between peaks is so small, that the &amp;quot;strongest&amp;quot; one changes quite often.&lt;/p&gt;&lt;p&gt;Selecting this ensures that the software takes the first of the peaks that meets some strength criteria&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>first correlation</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="QCheckBox" name="etiActivated_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;eti files can be generated by Qt-DAB-5.x. Since generating an eti file from an ensemble seems incompatible with scanning, the scan button is replaced by an &amp;quot;eti&amp;quot; button when eti is activated.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:700;&quot;&gt;Note that building up an eti file requires quite some resources.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If eti is activated, the scanButton is replaced by the etiButton. Touching that button shows a fileselection menu, after selecting a file the content of the ensemble is sent in eti format to the file. The eti session stops when (a) the eti button is touched again, (b) switching to another channel or (c) disabling eti by unchecking the checkbox.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>eti activated</string>
       </property>
      </widget>
     </item>
     <item row="2" column="2">
      <widget class="QCheckBox" name="localBrowserSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Set in the configuration that on starting the http service a browser will have to be started manually. By default  browser starts automaticall when the http button is set. Effective immediately&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>start browser manually</string>
       </property>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QCheckBox" name="showAll_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Display of transmitters on the map has two modes, selected by this checkbox. If enabled, all (channel, tiiPairs) per transmitter is shown, i.e. if it is seen that - for different channels - the same  transmitter(location) is used, then for each of the channels the channelname and the tii values are shown in a list.&lt;/p&gt;&lt;p&gt;If the checkbox is disabled, then for each transmitter(location) seen, only the channel last seen is shown.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>showAll</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="QCheckBox" name="saveSlides">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If set, slides (pictures) appearing during transmissions are being saved&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>save slides</string>
       </property>
      </widget>
     </item>
     <item row="3" column="2">
      <widget class="QCheckBox" name="audioServices_only">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Many ensembles contain both audio and data services (e.g. TPEG, EPG). If selected here, only audio services and  the EPG service if part of the ensemble will be shown in the services list&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>audio services only</string>
       </property>
      </widget>
     </item>
     <item row="4" column="0">
      <widget class="QCheckBox" name="logger_selector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If set, a log file is maintained (as usual for windows in the folder in the home folder and for Linux in the directory /tmp in a folder/directory Qt-DAB-files) in a txt file :logFile.txt, in which activities such as selecting a device, channel, service, dump are written, preceded by the time of the activity.&lt;/p&gt;&lt;p&gt;The setting of the selector is maintained between program invocations.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>  logger</string>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <widget class="QCheckBox" name="dcRemoval">
       <property name="text">
        <string>dc removal</string>
       </property>
      </widget>
     </item>
     <item row="4" column="2">
      <widget class="QCheckBox" name="checkBox_2">
       <property name="text">
        <string/>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_3">
     <item>
      <widget class="QSpinBox" name="tiiCollisions">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If setting a subId value different from 0, the software searches for ALL mainIds, associated with that  subId.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="smallComboBox" name="decoderSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Decoding DAB means interpreting the output of the DPSK on the FFT output, the latter meaning taking the phase difference between corresponding carriers in subsequent FFT symbols.&lt;/p&gt;&lt;p&gt;Ideally these phases are a multiple of 90 degrees, in reality they are less precise. The decoders here all try to map the results of the previous phase onto &amp;quot;soft bits&amp;quot;, i.e. values between -127 and 127. Each &amp;quot;dot&amp;quot; is mapped onto two bits, one depending on the X coordinate, the other on the &amp;quot;Y&amp;quot; one&lt;/p&gt;&lt;p&gt;The differences between the decoders is the way they look at the way the measured values differ from the ideal ones. In general, the most simple one, here the &amp;quot;decoder_a&amp;quot;, gives the best results.&lt;/p&gt;&lt;p&gt;The quality can be seen by looking at the fic BER value, that shows the percentage of the input soft bits in FIC processing that are wrong (and needed to be repaired by the viterbi decoder)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="smallComboBox" name="streamoutSelector">
       <property name="maximumSize">
        <size>
         <width>162</width>
         <height>16777215</height>
        </size>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select the audio channel, depends on the OS you are running on&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="smallComboBox" name="deviceSelector">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select a device.  Devices appearing in the list here are configured in the Qt-DAB software. Note that the DAB software tries to load the required device interface functions dynamically, so a device appearing in this list is not automatically supported, you need to have installed a device driver&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>smallPushButton</class>
   <extends>QPushButton</extends>
   <header>smallpushbutton.h</header>
  </customwidget>
  <customwidget>
   <class>smallComboBox</class>
   <extends>QComboBox</extends>
   <header>smallcombobox.h</header>
  </customwidget>
  <customwidget>
   <class>smallSpinBox</class>
   <extends>QSpinBox</extends>
   <header location="global">smallspinbox.h</header>
  </customwidget>
  <customwidget>
   <class>clickablelabel</class>
   <extends>QLabel</extends>
   <header location="global">clickable-label.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
 <buttongroups>
  <buttongroup name="buttonGroup"/>
 </buttongroups>
</ui>
